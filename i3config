# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see http://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod1

# startup applications
exec termite
exec compton -b
exec --no-startup-id xfce4-power-manager
exec --no-startup-id pamac-tray
exec --no-startup-id clipit
exec --no-startup-id conky

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
# font pango:monospace 15
font pango: Dank Mono 14

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec termite


# allow terminal  to float
# for_window [class="Termite"] floating enable

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
# bindsym $mod+d exec dmenu_run
# instead, start rofi 
bindsym $mod+d exec rofi -show run -lines 3 -eh 1 -width 1440 -height 2160 -opacity "20" -bw 0 -font "Dank Mono 21" # -bc "#333333" -bg "#EEEEEE" -fg "#FFFFFF" #-hlbg "$bg-color" -hlfg "#9575cd" -font "Dank Mono 18"


# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
# bindsym $mod+j focus left
# bindsym $mod+k focus down
# bindsym $mod+l focus up
# bindsym $mod+ntilde focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
# bindsym $mod+Shift+j move left
# bindsym $mod+Shift+k move down
# bindsym $mod+Shift+l move up
# bindsym $mod+Shift+ntilde move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
# bindsym $mod+s layout stacking
# bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# variables declaration

set $workspace1 "&#xf120; Terminals"
set $workspace2 "&#xf268; Chromium"
set $workspace3 "&#xf121; Code"
set $workspace4 "&#xf188; Bugs"
set $workspace5 "&#xf0f4; IDEs"
set $workspace6 "&#xf1b2; VMs"
set $workspace7 "&#xf02d; Documents"
set $workspace8 "&#xf269; Firefox"
set $workspace9 "&#xf2c6; Telegram"
set $workspace0 "&#xf001; Music"

# switch to workspace
bindsym $mod+1 workspace $workspace1
bindsym $mod+2 workspace $workspace2
bindsym $mod+3 workspace $workspace3
bindsym $mod+4 workspace $workspace4
bindsym $mod+5 workspace $workspace5
bindsym $mod+6 workspace $workspace6
bindsym $mod+7 workspace $workspace7
bindsym $mod+8 workspace $workspace8
bindsym $mod+9 workspace $workspace9
bindsym $mod+0 workspace $workspace0

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $workspace1
bindsym $mod+Shift+2 move container to workspace $workspace2
bindsym $mod+Shift+3 move container to workspace $workspace3
bindsym $mod+Shift+4 move container to workspace $workspace4
bindsym $mod+Shift+5 move container to workspace $workspace5
bindsym $mod+Shift+6 move container to workspace $workspace6
bindsym $mod+Shift+7 move container to workspace $workspace7
bindsym $mod+Shift+8 move container to workspace $workspace8
bindsym $mod+Shift+9 move container to workspace $workspace9
bindsym $mod+Shift+0 move container to workspace $workspace0

# assign specific programs to a specific workspace
assign [class="Termite"] $workspace1
assign [class="Chromium"] $workspace2
assign [class="code"] $workspace3
assign [class="RStudio"] $workspace4
assign [class="UnityHub"] $workspace5
assign [class="Unity"] $workspace5
assign [class="Postman"] $workspace5
assign [class="VirtualBox"] $workspace6
assign [class="calibre"] $workspace7
assign [class="Pcmanfm"] $workspace7
assign [class="firefox"] $workspace8
assign [class="TelegramDesktop"] $workspace9
assign [class="pavucontrol"] $workspace0
assign [class="vlc"] $workspace0


# for some reason spotify doesn't follow the same rule
for_window [class="Spotify"] move to workspace $workspace0

# reload the configuration file
bindsym $mod+Shift+c relolcad
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'Do you really want to exit i3?' -b 'Yup!' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym ntilde resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"

# set colors
set $bg-color 	                 #2f343f
set $inactive-bg-color      #2f343f
set $text-color                   #f3f4f5
set $inactive-text-color    #676E7D
set $urgent-bg-color        #E53935

# window colors
#                                        border                       background            text                             indicator
client.focused                 $bg-color                  $bg-color                $text-color                 #00ff00
client.unfocused            $inactive-bg-color   $inactive-bg-color $inactive-text-color  #00ff00
client.focused_inactive $inactive-bg-color   $inactive-bg-color $inactive-text-color  #00ff00
client.urgent                   $urgent-bg-color    $urgent-bg-color   $text-color                 #00ff00

new_window pixel 1
hide_edge_borders both

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
        font pango: Dank Mono, FontAwesome 14
        status_command i3status
        position   bottom
}

# Pulse Audio controls
exec --no-startup-id volumeicon # replaces need to use this other 3 controls
#bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume 0 +5% #increase sound volume
#bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume 0 -5% #decrease sound volume
#bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute 0 toggle # mute sound

# Sreen brightness controls
#bindsym XF86MonBrightnessUp exec xbacklight -inc 5 # increase screen brightness
#bindsym XF86MonBrightnessDown exec xbacklight -dec 5 # decrease screen brightness

# Media player controls
bindsym $mod+shift+m exec playerctl play
bindsym $mod+m exec playerctl pause
bindsym $mod+n exec playerctl next
bindsym $mod+p exec playerctl previous

# Switch headphones/speakers. Think of it like j as in jack
bindsym $mod+j exec pacmd set-sink-port 0 analog-output-headphones
bindsym $mod+shift+j exec pacmd set-sink-port 0 analog-output-speaker

# lock screen
# bindsym $mod+shift+x exec i3lock -c 000000 # black background
# bindsym $mod+shift+x exec i3lock -i /home/$USER/.lockBackground
##  lock screen after 5 minutes of inactivity
# exec xautolock -time 5 -locker "i3lock -i /home/$USER/.lockBackground 2> errorLog.txt" &


# open Telegram Desktop
bindsym $mod+t exec telegram-desktop
# enable Telegram to float
# for_window [class="TelegramDesktop"] floating enable

# open File Manager
# bindsym $mod+shift+f exec thunar

# display calendar
# bindsym $mod+c  exec zenity --calendar

# open NetworkManager on startup
exec --no-startup-id nm-applet

# disable that bloody terminal beep that's been driving me nuts
exec --no-startup-id xset -b

# sets wallpaper
#exec_always feh --bg-scale /home/$USER/.wallpaper
#exec_always feh --bg-scale --randomize /home/$USER/.wallpapers_dir/
exec_always --no-startup-id /home/$USER/bin/autocycle_wallpapers.sh

# switch workspaces
bindsym $mod+Tab workspace next
bindsym $mod+Shift+Tab workspace prev

# Some synaptics configurations. 70-synaptics.config ain't reading the config properly.
exec --no-startup-id synclient TapButton1=1
exec --no-startup-id synclient TapButton2=3
exec --no-startup-id synclient TapButton3=2
exec --no-startup-id synclient HorizTwoFingerScroll=1
exec --no-startup-id syndaemon -i 0.4 -t -K -R -d

# automount inserted drives
exec --no-startup-id devmon

# PRINT SCREENSHOTS
bindsym Print exec scrot -e 'mv $f ~/Pictures/Screenshots'
bindsym $mod+s exec sleep 0.5 && scrot --select -e 'mv $f ~/Pictures/Screenshots'


# Set shut down, restart and locking features
bindsym $mod+shift+x mode "$mode_system"
set $mode_system (l)ock, (e)xit, switch_(u)ser, (s)uspend, (h)ibernate, (r)eboot, (Shift+s)hutdown
mode "$mode_system" {
    bindsym l exec --no-startup-id i3exit lock, mode "default"
    bindsym s exec --no-startup-id i3exit suspend, mode "default"
    bindsym u exec --no-startup-id i3exit switch_user, mode "default"
    bindsym e exec --no-startup-id i3exit logout, mode "default"
    bindsym h exec --no-startup-id i3exit hibernate, mode "default"
    bindsym r exec --no-startup-id i3exit reboot, mode "default"
    bindsym Shift+s exec --no-startup-id i3exit shutdown, mode "default"

    # exit system mode: "Enter" or "Escape"
    bindsym Return mode "default"
    bindsym Escape mode "default"
}


#############################
### settings for i3-gaps: ###
#############################

# Set inner/outer gaps
gaps inner 14
gaps outer -2

# Additionally, you can issue commands with the following syntax. This is useful to bind keys to changing the gap size.
# gaps inner|outer current|all set|plus|minus <px>
# gaps inner all set 10
# gaps outer all plus 5

# Smart gaps (gaps used if only more than one container on the workspace)
smart_gaps on

# Smart borders (draw borders around container only if it is not the only container on this workspace) 
# on|no_gaps (on=always activate and no_gaps=only activate if the gap size to the edge of the screen is 0)
smart_borders on

# Press $mod+Shift+g to enter the gap mode. Choose o or i for modifying outer/inner gaps. Press one of + / - (in-/decrement for current workspace) or 0 (remove gaps for current workspace). If you also press Shift with these keys, the change will be global for all workspaces.
set $mode_gaps Gaps: (o) outer, (i) inner
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}

